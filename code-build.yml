trigger: none

pool:
  name: devasc-anisa

stages:
# Stage untuk Code Quality (ESLint, SonarQube)
- stage: CodeQuality
  jobs:
    - job: CodeQualityCheck
      steps:
      # Checkout code dari repository GitHub
      - checkout: self
        persistCredentials: true
        fetchDepth: 1
        clean: true

      # Setup Node.js
      - task: NodeTool@0
        displayName: 'Install Node.js'
        inputs:
          versionSpec: '20.x'

      # Install dependencies
      - script: |
          npm install
        displayName: 'Install Dependencies'

      # Install dependencies
      - script: |
          npm audit
        displayName: 'Install Dependencies'

      # Linting dengan fix
      - script: |
          - script: |
          npx eslint --config client/eslint.config.js client --fix --format json -o eslint-report.json
        displayName: 'Run ESLint with Fix and Report'
      
      # Publish report
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: 'eslint-report.json'
          ArtifactName: 'ESLint Report'
        displayName: 'Publish ESLint Report'

      - task: SonarQubePrepare@7
        inputs:
          SonarQube: 'SonarQube'
          scannerMode: 'cli'
          configMode: 'manual'
          cliProjectKey: 'FP-PSO-11_FP-PSO-11_AZPKLNXakXt54pvTXdAs'
          cliProjectName: 'Portal Lomba'
          cliSources: '.'
          extraProperties: |
            # Additional properties that will be passed to the scanner, 
            # Put one key=value per line, example:
            # sonar.exclusions=**/*.bin
            sonar.java.binaries=.

      - task: SonarQubeAnalyze@7
        inputs:
          jdkversion: 'JAVA_HOME'

      - task: SonarQubePublish@7
        inputs:
          pollingTimeoutSec: '300'

- stage: Build
  jobs:
    - job: Build
      steps:
      - task: DockerInstaller@0
        inputs:
          dockerVersion: '17.09.0-ce'

      - task: Docker@2
        inputs:
          containerRegistry: 'docker'
          repository: 'anisarahmah/react'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: 'portal-lomba'
          addPipelineData: false
          addBaseImageData: false