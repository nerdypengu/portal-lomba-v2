trigger: none

pool:
  name: karina

variables:
  # Service connection name for Docker Registry
  dockerRegistryServiceConnection: 'cb233987-cf7a-4fa2-a805-80378c1f1f34'
  # Replace <YOUR-REGISTRY-NAME> with your Azure Container Registry name
  containerRegistry: 'docker.azurecr.io'
  imageNameFrontend: 'client'
  imageNameBackend: 'server'

stages:
- stage: BuildAndContainerize
  displayName: Build and Containerize
  jobs:
  - job: BuildAndContainerizeJob
    displayName: Build and Containerize Job
    steps:
    # Step 1: Checkout code
    - task: Checkout@1
      displayName: Checkout Code

    # Step 2: Install Dependencies (Frontend and Backend)
    - script: |
        npm install --prefix client
        npm install --prefix server
      displayName: Install Dependencies

    # Step 3: Build Frontend
    - script: npm run build --prefix client
      displayName: Build Frontend

    # Step 4: Build Backend
    - script: npm run build --prefix server
      displayName: Build Backend

    # Step 5: Dockerize Frontend
    - task: Docker@2
      displayName: Build Docker Image (Frontend)
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(containerRegistry)/$(imageNameFrontend)
        dockerfile: client/Dockerfile
        tags: |
          $(Build.BuildId)

    # Step 6: Dockerize Backend
    - task: Docker@2
      displayName: Build Docker Image (Backend)
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(containerRegistry)/$(imageNameBackend)
        dockerfile: server/Dockerfile
        tags: |
          $(Build.BuildId)

    # Step 7: Push Docker Images
    - task: Docker@2
      displayName: Push Docker Images
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(containerRegistry)/$(imageNameFrontend)
        tags: |
          $(Build.BuildId)

    - task: Docker@2
      displayName: Push Backend Docker Image
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(containerRegistry)/$(imageNameBackend)
        tags: |
          $(Build.BuildId)
